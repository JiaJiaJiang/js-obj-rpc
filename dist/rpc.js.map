{"version":3,"file":"rpc.js","sources":["../index.js"],"sourcesContent":["/*\r\nCopyright luojia@luojia.me\r\nMIT LICENSE\r\n*/\r\n\r\n/* \r\nmessage structure\r\nByte 0-3\t\ta fixed 4 bytes random id for check if this message is valid for this session, default is filled by 0\r\nByte 4\r\n\t[0] \t\t0:request\r\n\t\t\t\t1:response\r\n\t[1] request:\t0: no id\r\n\t\t\t\t\t1:has id\r\n\t\tresponse:\t0:normal response\r\n\t\t\t\t\t1:error message\r\n\t[2] reserved\r\n\t[3-7] message type\r\n\t\t0-7: \tsee: ControlMsg\r\n\t\t8:\t\tdata true\r\n\t\t9:\t\tdata false\r\n\t\t10:\t\tdata binary\r\n\t\t11:\t\tdata string\r\n\t\t12:\t\tdata json string\r\n\t\t13:\t\tdata double js number\r\n\t\t14:\t\tdata undefined\r\n\t\t15:\t\tdata null\r\n\t\t16:\t\tdata bigint\r\n\t\t16-31:\treserved\r\n[\r\n\tByte 5-8\r\n\t\tmessage id (if has id or is a response)\r\n\tByte 9-12\r\n\t\trandom number\r\n]\r\nByte -\r\n\tdata\r\n*/\r\n\r\n//Polyfill\r\n// Number.MAX_SAFE_INTEGER || (Number.MAX_SAFE_INTEGER = 0x1fffffffffffff);\r\n// if (!Number.isSafeInteger)\r\n// \tNumber.isSafeInteger = function (a) { return Number.isInteger(a) && Math.abs(a) <= Number.MAX_SAFE_INTEGER };\r\n// if (!Number.isInteger)\r\n// \tNumber.isInteger = function (b) { return \"number\" == typeof b && isFinite(b) && Math.floor(b) === b };\r\n\r\n\r\nconst SUPPORT_ARRAYBUFFER = !!global.ArrayBuffer;\r\nconst TypedArray = SUPPORT_ARRAYBUFFER && global.Float32Array.prototype.constructor.__proto__;\r\nif (SUPPORT_ARRAYBUFFER && !ArrayBuffer.isView) {//ArrayBuffer.isView\r\n\tArrayBuffer.isView = a => !!((TypedArray && (a instanceof TypedArray)) || (global.DataView && (a instanceof DataView)));\r\n}\r\n\r\nconst encoder = new TextEncoder();\r\nconst decoder = new TextDecoder()\r\nconst tmpFloat64Array1 = new Float64Array(1),\r\n\ttmpUint8Array5 = new Uint8Array(5),\r\n\ttmpUint8Array13 = new Uint8Array(13);\r\nfunction strToUint8(str) {\r\n\treturn encoder.encode(str);\r\n}\r\nfunction uint8ToStr(uint8) {\r\n\treturn decoder.decode(uint8);\r\n}\r\nfunction getSliceInArrayBuffer(typedArray) {\r\n\treturn typedArray.buffer.slice(typedArray.byteOffset, typedArray.byteOffset + typedArray.byteLength);\r\n}\r\nfunction concatArrayBuffers(buffers) {\r\n\tlet offsets = new Array(buffers.length), totalLength = 0;\r\n\tfor (let ai = 0; ai < buffers.length; ai++) {\r\n\t\toffsets[ai] = totalLength;\r\n\t\ttotalLength += buffers[ai].byteLength;\r\n\t\tif (buffers[ai] instanceof ArrayBuffer) {\r\n\t\t\tbuffers[ai] = new Uint8Array(buffers[ai]);\r\n\t\t}\r\n\t}\r\n\tconst result = new Uint8Array(totalLength);\r\n\tfor (let i = 0; i < buffers.length; i++) {\r\n\t\tresult.set(buffers[i], offsets[i]);\r\n\t}\r\n\treturn result;\r\n}\r\n/**\r\n * @description\tMessage object\r\n * @class Message\r\n */\r\nclass Message {\r\n\tid;\r\n\trandom;\r\n\thead;\r\n\ttype;\r\n\t_data;\r\n\thasID;\r\n\tpayload;\r\n\tsessionId;\r\n\tisRequest;\r\n\t/**\r\n\t * Creates an instance of Message.\r\n\t * @param {ArrayBuffer} data\r\n\t */\r\n\tconstructor(data) {\r\n\t\tthis.sessionId = new DataView(data.buffer, data.byteOffset, data.byteLength).getUint32(0);\r\n\t\tdata=data.subarray(4);\r\n\t\tif (ArrayBuffer.isView(data) || (data instanceof ArrayBuffer) === true) data = new Uint8Array(data);\r\n\t\telse {\r\n\t\t\tthrow (new TypeError('Wrong data'));\r\n\t\t}\r\n\t\tif (data.byteLength === 0) {\r\n\t\t\tthrow (new Error('Bad message'));\r\n\t\t}\r\n\t\tdata = new Uint8Array(data);\r\n\t\tthis.head = data[0];\r\n\t\tthis.isRequest = (this.head & 0b10000000) === 0;\r\n\t\tthis.hasID = this.isRequest ? (this.head & 0b01000000) === 0b01000000 : true;\r\n\t\t// this.finished=(head&0b00100000)===0b00100000;//finished flag\r\n\t\tif (this.hasID) {//calc id\r\n\t\t\tif (data.byteLength < 5) {\r\n\t\t\t\tthrow (new Error('Bad message'));\r\n\t\t\t}\r\n\t\t\tconst view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n\t\t\tthis.id = view.getUint32(1);\r\n\t\t\tthis.random = view.getUint32(5);\r\n\t\t}\r\n\t\tthis.type = this.head & 0b00011111;//type of the message\r\n\t\tthis.payload = data.buffer.slice(data.byteOffset + this.hasID ? 9 : 1, data.byteLength);\r\n\t\tthis._data;//data cache\r\n\t}\r\n\t/**\r\n\t * @description\tis control message\r\n\t * @readonly\r\n\t */\r\n\tget isCtrl() {\r\n\t\treturn this.type < 8;\r\n\t}\r\n\t/**\r\n\t * @description\tis error message\r\n\t * @readonly\r\n\t */\r\n\tget isError() {\r\n\t\tif ((this.head & 0x40) === 0x40) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t/**\r\n\t * @description parse data\r\n\t * @returns {any}\tcarried data\r\n\t */\r\n\tdata() {\r\n\t\tif (this._data !== undefined) return this._data;\r\n\t\tthis._data = (() => {\r\n\t\t\tif (this.type < 8) return ControlMsg.parseData(this.type, this.payload);\r\n\t\t\tswitch (this.type) {\r\n\t\t\t\tcase 8: return true;\r\n\t\t\t\tcase 9: return false;\r\n\t\t\t\tcase 10: return this.payload;//binary\r\n\t\t\t\tcase 11: return uint8ToStr(this.payload);//string\r\n\t\t\t\tcase 12: return JSON.parse(uint8ToStr(this.payload));//json\r\n\t\t\t\tcase 13://js number\r\n\t\t\t\t\tif (this.payload.byteLength !== 8)\r\n\t\t\t\t\t\tthrow ('Wrong data length for number');\r\n\t\t\t\t\tconst view = new DataView(this.payload);\r\n\t\t\t\t\treturn view.getFloat64(0);\r\n\t\t\t\tcase 14: return undefined;\r\n\t\t\t\tcase 15: return null;\r\n\t\t\t\tcase 16: {\r\n\t\t\t\t\tconst bStr = uint8ToStr(this.payload);\r\n\t\t\t\t\tif (bStr[0] === '-') return -BigInt('0x' + bStr.slice(1));\r\n\t\t\t\t\treturn BigInt('0x' + bStr);\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow ('Unknown data type');\r\n\t\t\t}\r\n\t\t})();\r\n\t\treturn this._data;\r\n\t}\r\n\t/**\r\n\t * @description\tconvert different data to message format buffer\r\n\t * @static\r\n\t * @param {any} data\tdata that defined at top of this file\r\n\t * @returns {[number,ArrayBuffer]}\t[type code, data buffer]\r\n\t */\r\n\tstatic toFrameData(data) {\r\n\t\tif (data === undefined) return [14];\r\n\t\tif (data === null) return [15];\r\n\t\tif (data === true) return [8];\r\n\t\tif (data === false) return [9];\r\n\t\tif (data instanceof ControlMsg) {\r\n\t\t\treturn [data.code, data.buf];\r\n\t\t}\r\n\t\tif (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\r\n\t\t\treturn [10, data.buffer ? getSliceInArrayBuffer(data) : data];\r\n\t\t}\r\n\t\tif (data instanceof Error) {\r\n\t\t\tconsole.error(data);\r\n\t\t\tthrow ('Dont use Error, use RPC.Error instead');\r\n\t\t}\r\n\t\tif (data instanceof ErrorMsg) {\r\n\t\t\treturn [12, strToUint8(JSON.stringify({ code: data.code || 4100, msg: data.msg }))];\r\n\t\t}\r\n\t\tswitch (typeof data) {\r\n\t\t\tcase 'string': return [11, strToUint8(data)];\r\n\t\t\tcase 'object': return [12, strToUint8(JSON.stringify(data))];\r\n\t\t\tcase 'number':\r\n\t\t\t\tconst view = new DataView(tmpFloat64Array1.buffer, tmpFloat64Array1.byteOffset, tmpFloat64Array1.byteLength);\r\n\t\t\t\tview.setFloat64(0, data);\r\n\t\t\t\treturn [13, getSliceInArrayBuffer(view)];\r\n\t\t\tcase 'bigint':\r\n\t\t\t\treturn [16, strToUint8(data.toString(16))];\r\n\t\t}\r\n\t\t// console.error('data: ',data);//debug\r\n\t\tthrow (new TypeError('Unsupported data type: ' + typeof data));\r\n\t}\r\n\t/**\r\n\t * @description\tpack data into message buffer\r\n\t * @static\r\n\t * @param {boolean} req\tis request\r\n\t * @param {boolean} err\tis error\r\n\t * @param {number} type\ttype code\r\n\t * @param {ArrayBuffer} buf\tdata buffer\r\n\t * @param {number} id\tmessage id\r\n\t * @param {number} randomNum\ta random number for preventing id confict\r\n\t * @returns {ArrayBuffer}  \r\n\t */\r\n\tstatic _pack(sessionId, req, err, type, buf, id, randomNum) {\r\n\t\tlet hasID = typeof id === 'number' && id > 0;\r\n\t\tlet array = (hasID ? tmpUint8Array13 : tmpUint8Array5);//alloc the head buffer\r\n\t\tarray.fill(0);\r\n\t\tconst view = new DataView(array.buffer, array.byteOffset, array.byteLength);\r\n\t\tview.setUint32(0, sessionId);\r\n\t\tconst head = array.subarray(4, hasID ? 13 : 5);\r\n\t\tif (req === true) {//request\r\n\t\t\tif (hasID) head[0] |= 0b01000000;//set id flag\r\n\t\t} else {//response\r\n\t\t\thead[0] = 0b10000000;//set as response\r\n\t\t\tif (err) { head[0] |= 0b01000000; }//set err msg flag\r\n\t\t}\r\n\t\thead[0] |= type;\r\n\t\tlet bufs = [array];\r\n\t\tif (hasID) {\r\n\t\t\tif (id >= 0xFFFFFFFF)\r\n\t\t\t\tthrow (new Error('id out of range'));\r\n\t\t\tview.setUint32(5, id);//write id\r\n\t\t\tview.setUint32(9, randomNum);//write randomNum\r\n\t\t}\r\n\t\tif (buf && buf.byteLength) bufs.push(buf);\r\n\t\treturn concatArrayBuffers(bufs);\r\n\t}\r\n\t/**\r\n\t * @description\tpack data into message buffer\r\n\t * @static\r\n\t * @param {boolean} req\tis request\r\n\t * @param {any} data\tdata to send\r\n\t * @param {number} id\tmessage id\r\n\t * @param {number} randomNum\ta random number for preventing id confict\r\n\t * @returns {ArrayBuffer}\tpacked message\r\n\t */\r\n\tstatic pack(sessionId, req, data, id, randomNum) {\r\n\t\tlet [type, buf] = Message.toFrameData(data);//get data type and meg buffer\r\n\t\tlet err = data instanceof ErrorMsg;\r\n\t\treturn Message._pack(sessionId, req, err, type, buf, id, randomNum);\r\n\t}\r\n\tstatic msgErrorCodes = {\r\n\t\t4100: '',//free message\r\n\t\t4101: 'Forbidden',\r\n\t\t4102: 'Cannot parse the data',\r\n\t\t4103: 'Not supported operation',\r\n\t\t4104: 'Duplicate id',\r\n\t\t4105: 'Time out',\r\n\t}\r\n\t/**\r\n\t * @description\tis valid id\r\n\t * @static\r\n\t * @param {number} id\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isValidId(id) {\r\n\t\treturn typeof id === 'number' && id > 0 && id <= 0xFFFFFFFF;\r\n\t}\r\n}\r\n\r\n/**\r\n * @description error message\r\n * @class ErrorMsg\r\n */\r\nclass ErrorMsg {\r\n\t/**\r\n\t * Creates an instance of ErrorMsg.\r\n\t * @param {any} code\terror code to return\r\n\t * @param {string} [msg='']\terror message to return\r\n\t */\r\n\tconstructor(code, msg = '') {\r\n\t\tthis.code = code;\r\n\t\tif (typeof msg === 'string') {\r\n\t\t\tthis.msg = msg;\r\n\t\t} else if (msg instanceof Error) {\r\n\t\t\tthis.msg = msg.message;\r\n\t\t} else {\r\n\t\t\tthrow (new Error('Not supported message type'));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @description control message\r\n * @class ControlMsg\r\n */\r\nclass ControlMsg {\r\n\tstatic cache = {};\r\n\tstatic codes = {\r\n\t\tabort: 1,//abort an operation\r\n\t}\r\n\tcode;\r\n\tbuf;\r\n\t/**\r\n\t * Creates an instance of ControlMsg.\r\n\t * @param {string} name name of the control operation\r\n\t * @param {*} data\tdata of the control message\r\n\t */\r\n\tconstructor(name, data) {\r\n\t\tif (name in ControlMsg.codes === false) {\r\n\t\t\tthrow (new Error('Unknown operation name'));\r\n\t\t}\r\n\t\tthis.code = ControlMsg.codes[name];\r\n\t\tswitch (this.code) {\r\n\t\t\tcase ControlMsg.codes.abort://abort message\r\n\t\t\t\tif (!Message.isValidId(data))\r\n\t\t\t\t\tthrow ('Invalid id: ' + data);\r\n\t\t\t\tthis.buf = new ArrayBuffer(4);\r\n\t\t\t\t(new DataView(this.buf)).setUint32(0, data);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description\tconvert control message payload to number\r\n\t * @static\r\n\t * @param {number} code\tcontrol code\r\n\t * @param {ArrayBuffer} buf\tcontrol message payload\r\n\t * @returns {number}  \r\n\t */\r\n\tstatic parseData(code, buf) {\r\n\t\tswitch (code) {\r\n\t\t\tcase ControlMsg.codes.abort:\r\n\t\t\t\treturn (new DataView(buf)).getUint32(0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @description request from remote\r\n * @class Request\r\n */\r\nclass Request {\r\n\tresponded = false;\r\n\ttimeout;\r\n\t/**\r\n\t * Creates an instance of Request.\r\n\t * @param {RPC} rpc\r\n\t * @param {number} id\tmessage id\r\n\t * @param {function(...any)} callback\treceive response data\r\n\t * @param {number} random\ta random number for preventing id confict\r\n\t */\r\n\tconstructor(rpc, id, callback, random) {\r\n\t\tthis.id = id;\r\n\t\tthis.rpc = rpc;\r\n\t\tthis.cb = callback;\r\n\t\tthis.random = random;\r\n\t}\r\n\t/**\r\n\t * @description\tabort the request, depends on remote data handle\r\n\t * @returns {Request} the abort request\r\n\t */\r\n\tabort() {\r\n\t\ttry {\r\n\t\t\treturn this.rpc.control('abort', this.id);\r\n\t\t} catch (err) {\r\n\t\t\t//nothing\r\n\t\t} finally {\r\n\t\t\tthis.rpc.delete(this);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description\tfill response data when the remote rpc respond\r\n\t * @param {*} args\r\n\t */\r\n\tcallback(...args) {\r\n\t\tif (this.responded)\r\n\t\t\tthrow (new Error('RPC responded'));\r\n\t\tthis.responded = true;\r\n\t\tif (this.cb)\r\n\t\t\tthis.cb(...args);\r\n\t}\r\n\t/**\r\n\t * @description set time out of the request\r\n\t * @param {*} time\r\n\t */\r\n\tsetTimeout(time) {\r\n\t\tif (typeof time !== 'number' || !(time >= 0))\r\n\t\t\tthrow (new Error('Wrong timeout'));\r\n\t\tif (this.timeout)\r\n\t\t\tclearTimeout(this.timeout);\r\n\t\tthis.timeout = setTimeout(() => this._timeout(), time);\r\n\t}\r\n\t/**\r\n\t * @description when timeout reaches, an abort control will be sent\r\n\t */\r\n\t_timeout() {\r\n\t\tthis.timeout = 0;\r\n\t\tthis.callback(new Error('Time out'));\r\n\t\tthis.abort('Time out');\r\n\t}\r\n\t_destructor() {\r\n\t\tthis.cb = null;\r\n\t\tthis.rpc = null;\r\n\t\tif (this.timeout) {\r\n\t\t\tclearTimeout(this.timeout);\r\n\t\t\tthis.timeout = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @description incoming request\r\n * @class InRequest\r\n */\r\nclass InRequest {\r\n\t_timeout;\r\n\taborted = false;\r\n\tresponded = false;\r\n\tsource;\r\n\trpc;\r\n\tmsg;\r\n\tonAbort(data) { }//overwrite this\r\n\t/**\r\n\t * Creates an instance of InRequest.\r\n\t * @param {Message} Message_msg\r\n\t * @param {RPC} rpc\r\n\t * @param {*} source define a source, which will be attached to request object\r\n\t */\r\n\tconstructor(Message_msg, rpc, source) {\r\n\t\tthis.rpc = rpc;\r\n\t\tthis.msg = Message_msg;\r\n\t\tthis.source = source;\r\n\t}\r\n\t/**\r\n\t * @description\tget message id\r\n\t * @readonly\r\n\t */\r\n\tget id() { return this.msg.id; }\r\n\t/**\r\n\t * @description\tget data of the message, wil be recovered to thier origin type\r\n\t * @returns {any}  \r\n\t */\r\n\tdata() {\r\n\t\treturn this.msg.data();\r\n\t}\r\n\t/**\r\n\t * @description\tset timeout of the incoming request\r\n\t * @param {*} time\r\n\t */\r\n\tsetTimeout(time) {\r\n\t\tif (typeof time !== 'number' || !(time >= 0))\r\n\t\t\tthrow (new Error('Wrong timeout'));\r\n\t\tif (this._timeout)\r\n\t\t\tclearTimeout(this._timeout);\r\n\t\tthis._timeout = setTimeout(() => this._reachTimeout(), time);\r\n\t}\r\n\t_abortMsg(str_msg) {\r\n\t\tif (this.aborted)\r\n\t\t\tthrow (new Error('request already aborted'));\r\n\t\tthis.aborted = true;\r\n\t\treturn this.onAbort(str_msg);\r\n\t}\r\n\t/**\r\n\t * @description when timeout reaches, rpc will send an error back to remote\r\n\t */\r\n\tasync _reachTimeout() {\r\n\t\tthis._timeout = 0;\r\n\t\ttry {\r\n\t\t\tawait this._abortMsg('time out');\r\n\t\t\tthis.rpc._respond(this, RPC.Error(4105));\r\n\t\t} catch (err) {\r\n\t\t}\r\n\t}\r\n\t_destructor() {\r\n\t\tthis.rpc = null;\r\n\t\tthis.msg = null;\r\n\t\tif (this._timeout) {\r\n\t\t\tclearTimeout(this._timeout);\r\n\t\t\tthis._timeout = 0;\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * @description RPC handle\r\n * @class RPC\r\n */\r\nclass RPC {\r\n\tstatic Error(code, msg) {\r\n\t\treturn new ErrorMsg(code, msg || Message.msgErrorCodes[code] || 'Unexpected error');\r\n\t}\r\n\tdebug = false;\r\n\t_currentID = 1;\r\n\t_sessionId = 0;//for verify if the response belongs to the same session,dont change it after inited\r\n\t_checkerTimer;\r\n\t_sender;\r\n\tdefaultRequestTimeout;\r\n\tdefaultResponseTimeout;\r\n\toutReqList = new Map();//sessionId_id => out Request\r\n\tinReqList = new Map();//sessionId_id => in Request\r\n\t_checkerTimer;\r\n\t_sender;\r\n\tonRequest(inReq) { }//overwrite this\r\n\tconstructor(opt = {}) {\r\n\t\tthis.defaultRequestTimeout = opt.defaultRequestTimeout || 15000;\r\n\t\tthis.defaultResponseTimeout = opt.defaultResponseTimeout || 15000;\r\n\t\tthis._sessionId = opt.sessionId || RPC.generateRandom();\r\n\t}\r\n\t//sender side\r\n\t/**\r\n\t * @description generate id (exclude 0)\r\n\t * @returns {number}  \r\n\t */\r\n\t_generateId() {\r\n\t\tif (this.outReqList.size === 0xFFFFFFFF) return false;//no id can be used\r\n\t\twhile (this.outReqList.has(`${this._sessionId}_${this._currentID}`)) {//find available id\r\n\t\t\tthis._currentID++;\r\n\t\t\tif (this._currentID === 0xFFFFFFFF) this._currentID = 1;\r\n\t\t}\r\n\t\treturn this._currentID;\r\n\t}\r\n\r\n\t/**\r\n\t * @description buffer handle\r\n\t * @param {ArrayBuffer} data\tdata from remote rpc sender\r\n\t * @param {*} source define a source, which will be attached to request object\r\n\t */\r\n\thandle(data, source) {\r\n\t\tlet Message_msg = new Message(data);\r\n\t\tif (Message_msg.isRequest === true) {//it's a request\r\n\t\t\tthis._requestHandle(Message_msg, source);\r\n\t\t} else {//it's a response\r\n\t\t\tthis._responseHandle(Message_msg, source);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description send request\r\n\t * @async\r\n\t * @param {*} data\r\n\t * @param {object} [opt]\r\n\t * @param {number} [opt.timeout] timeout for this request\r\n\t * @param {boolean} [opt.noResponse] let remote know dont respond this request\r\n\t * @param {function(Request)} [getRequest] a function for getting the request instance\r\n\t * @returns {*}  request result\r\n\t */\r\n\tasync request(data, opt, getRequest) {\r\n\t\tif (typeof opt !== 'object') opt = {};\r\n\t\tlet id = 0, request, rand;\r\n\t\tif (opt.noResponse !== true) {\r\n\t\t\tif ((id = this._generateId()) === false) throw (new Error('No free id'));\r\n\t\t}\r\n\t\tif (id !== 0) {\r\n\t\t\trand = RPC.generateRandom();\r\n\t\t}\r\n\t\tlet buffer = Message.pack(this._sessionId, true, data, id, rand);\r\n\r\n\t\treturn new Promise((ok, fail) => {\r\n\t\t\tif (id !== 0) {\r\n\t\t\t\trequest = new Request(this, id, (err, res) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\t\tconsole.debug('RPC receive error', 'req:', data, 'err:', err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfail(err);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tok(res);\r\n\t\t\t\t}, rand);\r\n\t\t\t\tthis.outReqList.set(`${this._sessionId}_${id}`, request);\r\n\t\t\t\trequest.setTimeout(opt.timeout || this.defaultRequestTimeout);\r\n\t\t\t\tif (getRequest) getRequest(request);\r\n\t\t\t}\r\n\t\t\tthis._send(buffer).then(err => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\tconsole.debug('RPC send error', 'req:', data, 'err:', err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfail(err);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @description\tsend control message\r\n\t * @async\r\n\t * @param {number} name\r\n\t * @param {*} data\r\n\t * @returns {*} control response\r\n\t */\r\n\tcontrol(name, data) {\r\n\t\tlet msg = new ControlMsg(name, data);\r\n\t\treturn this.request(msg);\r\n\t}\r\n\t/**\r\n\t * @description delete the req instance from map\r\n\t * @param {Request|InRequest} req\r\n\t */\r\n\tdelete(req) {\r\n\t\tif (req instanceof Request) {\r\n\t\t\tconst id = `${this._sessionId}_${req.id}`;\r\n\t\t\tif (this.outReqList.get(id) === req)\r\n\t\t\t\tthis.outReqList.delete(id);\r\n\t\t\telse { throw (new Error('Deleting unknown req')) }\r\n\t\t\treq._destructor();\r\n\t\t} else if (req instanceof InRequest) {\r\n\t\t\tconst id = `${req.msg.sessionId}_${req.id}`;\r\n\t\t\tif (this.inReqList.get(id) === req)\r\n\t\t\t\tthis.inReqList.delete(id);\r\n\t\t\telse { throw (new Error('Deleting unknown inReq')) }\r\n\t\t\treq._destructor();\r\n\t\t} else {\r\n\t\t\tconsole.error('arg: ', req);\r\n\t\t\tthrow (new Error('Wrong type'));\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description\tset sender of data.\r\n\t * @description\tsync sender : return send Error;\r\n\t * @description\tasync sender : resolve to send Error;\r\n\t * @param {function} func\r\n\t */\r\n\tsetSender(func) {\r\n\t\tif (typeof func !== 'function')\r\n\t\t\tthrow (new TypeError('not a function'));\r\n\t\t/* \r\n\t\t\tsync sender:return send Error\r\n\t\t*/\r\n\t\tthis._sender = func;\r\n\t}\r\n\t/**\r\n\t * @description\tsend buffer by sender function\r\n\t * @param {ArrayBuffer} buf\r\n\t * @returns {Promise<Error>}  \r\n\t */\r\n\tasync _send(buf) {\r\n\t\tif (this._sender) {\r\n\t\t\tif ((await this._sender(buf)) instanceof Error === false) return;\r\n\t\t\treturn await this._sender(buf);//retry\r\n\t\t}\r\n\t\tthrow (new Error('sender not defined'));\r\n\t}\r\n\t//receviver side\r\n\t/**\r\n\t * @description\tmake a message to respond the request\r\n\t * @param {InRequest} InRequest_req\r\n\t * @param {*} data\r\n\t */\r\n\t_respond(InRequest_req, data) {\r\n\t\tlet msg = InRequest_req.msg;\r\n\t\tif (this.inReqList.get(`${msg.sessionId}_${msg.id}`) !== InRequest_req) {\r\n\t\t\tif (this.debug) console.debug('Missing id');\r\n\t\t\t//ignore ids that not exist\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(msg.hasID){//only messages have id should be responded\r\n\t\t\tlet Buffer_buf = Message.pack(InRequest_req.msg.sessionId, false, data, msg.id, msg.random);\r\n\t\t\tthis._send(Buffer_buf);\r\n\t\t}\r\n\t\t//remove saved inReq\r\n\t\tthis.delete(InRequest_req);\r\n\t}\r\n\t/**\r\n\t * @description\thandle control operation\r\n\t * @param {*} code received control code\r\n\t * @param {*} data received control data\r\n\t * @param {*} source define a source, which will be attached to request object\r\n\t */\r\n\tasync _controlHandle(Message_msg, source) {\r\n\t\tconst ctrlCode = Message_msg.type;\r\n\t\tconst data = Message_msg.data();\r\n\t\tswitch (ctrlCode) {\r\n\t\t\tcase ControlMsg.codes.abort: {//cancel an operation\r\n\t\t\t\tlet InRequest_req = this.inReqList.get(`${Message_msg.sessionId}_${data}`);//data: id\r\n\t\t\t\tif (!InRequest_req)\r\n\t\t\t\t\treturn;//ignore\r\n\t\t\t\tInRequest_req._abortMsg('remote abort');\r\n\t\t\t\tthis.delete(InRequest_req);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tif (this.debug) console.debug('Unknown control code:' + ctrlCode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description\thandle received request\r\n\t * @param {Message} Message_msg\r\n\t * @param {*} source define a source, which will be attached to request object\r\n\t */\r\n\tasync _requestHandle(Message_msg, source) {\r\n\t\tconst sid_id=`${Message_msg.sessionId}_${Message_msg.id}`;\r\n\t\tif (this.inReqList.has(sid_id)) {\r\n\t\t\tthis._respond(Message_msg, RPC.Error(4104));//Duplicate id\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet InRequest_req = new InRequest(Message_msg, this, source);//create a response for the request\r\n\t\tif (Message_msg.id) {\r\n\t\t\tInRequest_req.setTimeout(this.defaultResponseTimeout);\r\n\t\t\tthis.inReqList.set(sid_id, InRequest_req);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet result;\r\n\t\t\tif (Message_msg.isCtrl === true) {//it's a control pack\r\n\t\t\t\tresult = await this._controlHandle(Message_msg, source);\r\n\t\t\t} else {\r\n\t\t\t\tresult = await this.onRequest(InRequest_req);\r\n\t\t\t}\r\n\t\t\tif (InRequest_req.msg && InRequest_req.msg.id && (this.inReqList.get(sid_id) === InRequest_req)) {\r\n\t\t\t\tthis._respond(InRequest_req, result);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tthis._respond(InRequest_req, err);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @description\thandle received response\r\n\t * @param {Message} Message_msg\r\n\t * @param {*} source define a source, which will be attached to request object\r\n\t */\r\n\t_responseHandle(Message_msg, source) {\r\n\t\tlet Request_req = this.outReqList.get(`${Message_msg.sessionId}_${Message_msg.id}`);\r\n\t\tif (!Request_req) {\r\n\t\t\tif (this.debug) console.debug('no req for id:' + Message_msg.id);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (Request_req.random !== Message_msg.random)\r\n\t\t\treturn;//ignore wrong response\r\n\t\tif (Message_msg.isError) {\r\n\t\t\tRequest_req.callback(Message_msg.data());\r\n\t\t} else {\r\n\t\t\tRequest_req.callback(null, Message_msg.data());\r\n\t\t}\r\n\t\tthis.delete(Request_req);\r\n\t}\r\n\t/**\r\n\t * @description\tgenerate a random number\r\n\t * @static\r\n\t * @returns {number}  \r\n\t */\r\n\tstatic generateRandom() {\r\n\t\treturn Math.round(0xffffffff * Math.random());\r\n\t}\r\n\t/**\r\n\t *destroy this instance and directly return error for all requests\r\n\t */\r\n\tdestroy() {\r\n\t\tfor (let [sid_id, request] of this.outReqList) {\r\n\t\t\trequest.callback(new Error('connection destroyed'));\r\n\t\t}\r\n\t\tfor (let [sid_id, InRequest_req] of this.inReqList) {\r\n\t\t\tInRequest_req._abortMsg('connection destroyed');\r\n\t\t}\r\n\t\tthis.outReqList.clear();\r\n\t\tthis.inReqList.clear();\r\n\t}\r\n}\r\n\r\nmodule.exports = {\r\n\tRPC,\r\n};\r\n"],"names":["SUPPORT_ARRAYBUFFER","global","ArrayBuffer","TypedArray","Float32Array","prototype","constructor","__proto__","isView","a","DataView","encoder","TextEncoder","decoder","TextDecoder","tmpFloat64Array1","Float64Array","tmpUint8Array5","Uint8Array","tmpUint8Array13","strToUint8","str","encode","uint8ToStr","uint8","decode","getSliceInArrayBuffer","typedArray","buffer","slice","byteOffset","byteLength","concatArrayBuffers","buffers","offsets","Array","length","totalLength","ai","result","i","set","Message","id","random","head","type","_data","hasID","payload","sessionId","isRequest","data","getUint32","subarray","TypeError","Error","view","isCtrl","isError","ControlMsg","parseData","JSON","parse","getFloat64","bStr","BigInt","toFrameData","code","buf","console","error","ErrorMsg","stringify","msg","setFloat64","toString","_pack","req","err","randomNum","array","fill","setUint32","bufs","push","pack","msgErrorCodes","isValidId","message","cache","codes","abort","name","Request","responded","timeout","rpc","callback","cb","control","delete","args","setTimeout","time","clearTimeout","_timeout","_destructor","InRequest","aborted","source","onAbort","Message_msg","_reachTimeout","_abortMsg","str_msg","_respond","RPC","debug","_currentID","_sessionId","_checkerTimer","_sender","defaultRequestTimeout","defaultResponseTimeout","outReqList","Map","inReqList","onRequest","opt","generateRandom","_generateId","size","has","handle","_requestHandle","_responseHandle","request","getRequest","rand","noResponse","Promise","ok","fail","res","_send","then","get","setSender","func","InRequest_req","Buffer_buf","_controlHandle","ctrlCode","sid_id","Request_req","Math","round","destroy","clear","jsObjRpc"],"mappings":"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"}