(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.RPC = factory());
})(this, (function () { 'use strict';

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function getDefaultExportFromCjs (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	var jsObjRpc,hasRequiredJsObjRpc;function requireJsObjRpc(){function a(a){return g.encode(a)}function b(a){return h.decode(a)}function c(a){return a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength)}function d(a){let b=Array(a.length),c=0;for(let d=0;d<a.length;d++)b[d]=c,c+=a[d].byteLength,a[d]instanceof ArrayBuffer&&(a[d]=new Uint8Array(a[d]));const d=new Uint8Array(c);for(let c=0;c<a.length;c++)d.set(a[c],b[c]);return d}if(hasRequiredJsObjRpc)return jsObjRpc;hasRequiredJsObjRpc=1;const e=!!commonjsGlobal.ArrayBuffer,f=e&&commonjsGlobal.Float32Array.prototype.constructor.__proto__;e&&!ArrayBuffer.isView&&(ArrayBuffer.isView=b=>!!(f&&b instanceof f||commonjsGlobal.DataView&&b instanceof DataView));const g=new TextEncoder,h=new TextDecoder,i=new Float64Array(1),j=new Uint8Array(5),k=new Uint8Array(13);class l{id;random;head;type;_data;hasID;payload;sessionId;isRequest;constructor(a){if(this.sessionId=new DataView(a.buffer,a.byteOffset,a.byteLength).getUint32(0),a=a.subarray(4),ArrayBuffer.isView(a)||true==a instanceof ArrayBuffer)a=new Uint8Array(a);else throw new TypeError("Wrong data");if(0===a.byteLength)throw new Error("Bad message");if(a=new Uint8Array(a),this.head=a[0],this.isRequest=0==(128&this.head),this.hasID=!this.isRequest||64==(64&this.head),this.hasID){if(5>a.byteLength)throw new Error("Bad message");const b=new DataView(a.buffer,a.byteOffset,a.byteLength);this.id=b.getUint32(1),this.random=b.getUint32(5);}this.type=31&this.head,this.payload=a.buffer.slice(a.byteOffset+this.hasID?9:1,a.byteLength),this._data;}get isCtrl(){return 8>this.type}get isError(){return 64==(64&this.head)}data(){return void 0===this._data?(this._data=(()=>{if(8>this.type)return n.parseData(this.type,this.payload);switch(this.type){case 8:return  true;case 9:return  false;case 10:return this.payload;case 11:return b(this.payload);case 12:return JSON.parse(b(this.payload));case 13:if(8!==this.payload.byteLength)throw "Wrong data length for number";const a=new DataView(this.payload);return a.getFloat64(0);case 14:return;case 15:return null;case 16:{const a=b(this.payload);return "-"===a[0]?-BigInt("0x"+a.slice(1)):BigInt("0x"+a)}default:throw "Unknown data type"}})(),this._data):this._data}static toFrameData(b){if(void 0===b)return [14];if(null===b)return [15];if(true===b)return [8];if(false===b)return [9];if(b instanceof n)return [b.code,b.buf];if(b instanceof ArrayBuffer||ArrayBuffer.isView(b))return [10,b.buffer?c(b):b];if(b instanceof Error)throw this.debug&&console.error(b),new TypeError("Dont use Error, use RPC.Error instead");if(b instanceof m)return [12,a(JSON.stringify({code:b.code||4100,msg:b.msg}))];switch(typeof b){case "string":return [11,a(b)];case "object":return [12,a(JSON.stringify(b))];case "number":const d=new DataView(i.buffer,i.byteOffset,i.byteLength);return d.setFloat64(0,b),[13,c(d)];case "bigint":return [16,a(b.toString(16))]}throw new TypeError("Unsupported data type: "+typeof b)}static _pack(a,b,c,e,f,g,h){let i="number"==typeof g&&0<g,l=i?k:j;l.fill(0);const m=new DataView(l.buffer,l.byteOffset,l.byteLength);m.setUint32(0,a);const n=l.subarray(4,i?13:5);true===b?i&&(n[0]|=64):(n[0]=128,c&&(n[0]|=64)),n[0]|=e;let o=[l];if(i){if(4294967295<=g)throw new Error("id out of range");m.setUint32(5,g),m.setUint32(9,h);}return f&&f.byteLength&&o.push(f),d(o)}static pack(a,b,c,d,e){let[f,g]=l.toFrameData(c);return l._pack(a,b,c instanceof m,f,g,d,e)}static msgErrorCodes={4100:"",4101:"Forbidden",4102:"Cannot parse the data",4103:"Not supported operation",4104:"Duplicate id",4105:"Time out"};static isValidId(a){return "number"==typeof a&&0<a&&4294967295>=a}}class m{constructor(a,b=""){if(this.code=a,"string"==typeof b)this.msg=b;else if(b instanceof Error)this.msg=b.message;else throw new Error("Not supported message type")}}class n{static cache={};static codes={abort:1};code;buf;constructor(a,b){if(false==a in n.codes)throw new Error("Unknown operation name");switch(this.code=n.codes[a],this.code){case n.codes.abort:if(!l.isValidId(b))throw "Invalid id: "+b;this.buf=new ArrayBuffer(4),new DataView(this.buf).setUint32(0,b);}}static parseData(a,b){return a===n.codes.abort?new DataView(b).getUint32(0):void 0}}class o{responded=false;timeout;constructor(a,b,c,d){this.id=b,this.rpc=a,this.cb=c,this.random=d;}abort(){try{return this.rpc.control("abort",this.id)}catch(a){}finally{this.rpc.delete(this);}}callback(...a){if(this.responded)throw new Error("RPC responded");this.responded=true,this.cb&&this.cb(...a);}setTimeout(a){if("number"!=typeof a||!(0<=a))throw new Error("Wrong timeout");this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(()=>this._timeout(),a);}_timeout(){this.callback(new Error("Time out")),this.rpc.delete(this),this.timeout=0;}_destructor(){this.cb=null,this.rpc=null,this.timeout&&(clearTimeout(this.timeout),this.timeout=0);}}class p{_timeout;aborted=false;responded=false;source;rpc;msg;onAbort(){}constructor(a,b,c){this.rpc=b,this.msg=a,this.source=c;}get id(){return this.msg.id}data(){return this.msg.data()}setTimeout(a){if("number"!=typeof a||!(0<=a))throw new Error("Wrong timeout");this._timeout&&clearTimeout(this._timeout),this._timeout=setTimeout(()=>this._reachTimeout(),a);}_abortMsg(a){if(this.aborted)throw new Error("request already aborted");return this.aborted=true,this.onAbort(a)}async _reachTimeout(){this._timeout=0;try{await this._abortMsg("time out"),this.rpc._respond(this,q.Error(4105));}catch(a){}}_destructor(){this.rpc=null,this.msg=null,this._timeout&&(clearTimeout(this._timeout),this._timeout=0);}}class q{static Error(a,b){return new m(a,b||l.msgErrorCodes[a]||"Unexpected error")}debug=false;_currentID=1;_sessionId=0;_checkerTimer;_sender;defaultRequestTimeout;defaultResponseTimeout;outReqList=new Map;inReqList=new Map;_checkerTimer;onRequest(){throw new Error("This method must be overwritten")}constructor(a={}){this.defaultRequestTimeout=a.defaultRequestTimeout||15e3,this.defaultResponseTimeout=a.defaultResponseTimeout||15e3,this._sessionId=a.sessionId||q.generateRandom(),this.debug=a.debug??false;}_generateId(){if(4294967295===this.outReqList.size)return  false;for(;this.outReqList.has(`${this._sessionId}_${this._currentID}`);)this._currentID++,4294967295===this._currentID&&(this._currentID=1);return this._currentID}handle(a,b){let c=new l(a);true===c.isRequest?this._requestHandle(c,b):this._responseHandle(c,b);}async request(a,b,c){"object"!=typeof b&&(b={});let d,e,f=0;if(true!==b.noResponse&&false===(f=this._generateId()))throw new Error("No free id");0!==f&&(e=q.generateRandom());let g=l.pack(this._sessionId,true,a,f,e);return new Promise((h,i)=>{0!==f&&(d=new o(this,f,(b,c)=>b?(this.debug&&console.debug("RPC receive error:","req:",a,"res:",b),void i(b)):void h(c),e),this.outReqList.set(`${this._sessionId}_${f}`,d),d.setTimeout(b.timeout||this.defaultRequestTimeout),c&&c(d)),this._send(g).then(b=>{b&&(this.debug&&console.debug("RPC send error","req:",a,"err:",b),i(b));});})}control(a,b){let c=new n(a,b);return this.request(c)}delete(a){if(a instanceof o){const b=`${this._sessionId}_${a.id}`;if(this.outReqList.get(b)===a)this.outReqList.delete(b);else throw new Error("Deleting unknown req");a._destructor();}else if(a instanceof p){const b=`${a.msg.sessionId}_${a.msg.id}`;if(this.inReqList.get(b)===a)this.inReqList.delete(b);else throw new Error("Deleting unknown inReq");a._destructor();}else throw this.debug&&console.error("arg: ",a),new Error("Wrong type")}setSender(a){if("function"!=typeof a)throw new TypeError("not a function");this._sender=a;}async _send(a){if(this._sender)return this._sender(a);throw new Error("sender not defined")}_respond(a,b){let c=a.msg;if(this.inReqList.get(`${c.sessionId}_${c.id}`)!==a)return void(this.debug&&console.debug("Missing id"));if(c.hasID){let d=l.pack(a.msg.sessionId,false,b,c.id,c.random);this._send(d);}this.delete(a);}async _controlHandle(a){const b=a.type,c=a.data();switch(b){case n.codes.abort:{let b=this.inReqList.get(`${a.sessionId}_${c}`);if(!b)return;b._abortMsg("remote abort"),this.delete(b);break}default:this.debug&&console.debug("Unknown control code:"+b);}}async _requestHandle(a,b){const c=`${a.sessionId}_${a.id}`;if(this.inReqList.has(c))return void this._respond(a,q.Error(4104));let d=new p(a,this,b);a.id&&(d.setTimeout(this.defaultResponseTimeout),this.inReqList.set(c,d));try{let e;e=!0===a.isCtrl?await this._controlHandle(a,b):await this.onRequest(d),d.msg&&d.msg.id&&this.inReqList.get(c)===d&&this._respond(d,e);}catch(a){this._respond(d,a);}}_responseHandle(a){let b=this.outReqList.get(`${a.sessionId}_${a.id}`);return b?void(b.random!==a.random||(a.isError?b.callback(a.data()):b.callback(null,a.data()),this.delete(b))):void(this.debug&&console.debug("no req for id:"+a.id))}static generateRandom(){var a=Math.round;return a(4294967295*Math.random())}destroy(){for(let[a,b]of this.outReqList)b.callback(new Error("connection destroyed"));for(let[a,b]of this.inReqList)b._abortMsg("connection destroyed");this.outReqList.clear(),this.inReqList.clear();}}return jsObjRpc={RPC:q,RemoteCallback:class extends q{opts={};handleArguments=(a,b)=>[a.arg,b];constructor(a){super(a);}async onRequest(a){try{return await this._handleRequest(a)}catch(a){if("string"==typeof a)throw q.Error(4100,a);else if(a instanceof Error)throw this.debug&&console.error(a),q.Error(4100,"handle error");else throw new TypeError("invalid error type:"+typeof a)}}async _handleRequest(a){let b=a.data();if("object"!=typeof b||null===b)throw this.debug&&console.error("invalid request",a),"invalid message type";if(false=="_"in b)throw "No opt found";let c=this.opts[b._];if(c){let d=await c(...this.handleArguments(b,a));return a.responded=true,d}throw `unknown handle type '${b._}'`}remoteCall(a,b,c){return super.request({_:a,arg:b},c)}register(a,b){if("string"!=typeof a)throw new TypeError("name should be a string");if("function"!=typeof b)throw new TypeError("fun should be a function");if(a in this.opts)throw new Error(`operation ${a} already been registered`);this.opts[a]=b;}deregister(a){delete this.opts[a];}destroy(){super.destroy(),this.opts=null;}request(){throw new Error("This method is disabled on sub class, use \"remoteCall\" instead.")}handleRPC(){throw new Error("This method is removed, use \"remoteCall\" handle.")}setRPCSender(){throw new Error("This method is removed, use \"setSender\" handle.")}}},jsObjRpc}

	var jsObjRpcExports=requireJsObjRpc();var index = getDefaultExportFromCjs(jsObjRpcExports);

	return index;

}));
//# sourceMappingURL=rpc.js.map
